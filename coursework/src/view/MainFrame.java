/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.table.AbstractTableModel;
import models.*;

/**
 *
 * class containing the views
 */
public class MainFrame extends javax.swing.JFrame {

    private Controller controller;
    private Patient patient;
    private JPopupMenu patientsDoctorsPopupMenu;
    

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }
    
    public MainFrame(Controller controller) {
        this.controller = controller;
        initComponents();
        initPopupMenus();
    }
    
    private void initPopupMenus()  {
        this.patientsDoctorsPopupMenu = new JPopupMenu();
        JMenuItem jmiReqAppointment = new JMenuItem("Request Appointment");
        jmiReqAppointment.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                Doctor d = ((DoctorsTableModel)MainFrame.this.jtblAllDoctors.getModel()).getDoctor(MainFrame.this.jtblAllDoctors.getSelectedRow());
                MainFrame.this.jtfAppointSchedulerPatientName.setText(patient.getGivenName() + " " + patient.getLastName());
                MainFrame.this.jtfAppointmentSchedulerDoctorName.setText(d.getGivenName() + " " + d.getLastName());
                MainFrame.this.jdRequestAppointment.pack();
                MainFrame.this.jdRequestAppointment.setLocationRelativeTo(MainFrame.this);
                MainFrame.this.jdRequestAppointment.setVisible(true);
            }
        });
        this.patientsDoctorsPopupMenu.add(jmiReqAppointment);
        this.jtblAllDoctors.setComponentPopupMenu(this.patientsDoctorsPopupMenu);
        this.jtblAllDoctors.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent event) {
                // selects the row at which point the mouse is clicked
                Point point = event.getPoint();
                int currentRow = jtblAllDoctors.rowAtPoint(point);
                jtblAllDoctors.setRowSelectionInterval(currentRow, currentRow);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpSubmitPatientCreationRequest = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtfGivenName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfLastName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfAddress = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfAge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jbtnSubmitPatientAccountRequest = new javax.swing.JButton();
        jtfPassword = new javax.swing.JPasswordField();
        jtfDOB = new javax.swing.JFormattedTextField();
        jpLRC = new javax.swing.JPanel();
        jBtnViewLogin = new javax.swing.JButton();
        jBtnViewRquestPatientAcc = new javax.swing.JButton();
        jBtnViewCreateAdmin = new javax.swing.JButton();
        pLoginContainer = new javax.swing.JPanel();
        jpLoginRootView = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfUserID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jpfPassword = new javax.swing.JPasswordField();
        jBtnLogin = new javax.swing.JButton();
        jpCreateAdmin = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jtfCreateAdminGivenName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtfCreateAdminLastName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtfCreateAdminAddress = new javax.swing.JTextField();
        jbtnCreateAdminSubmit = new javax.swing.JButton();
        jpPatientRoot = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblAllDoctors = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblMyHistory = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblMyAppointments = new javax.swing.JTable();
        jlblPatientName = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jdRequestAppointment = new javax.swing.JDialog();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtfAppointmentSchedulerDoctorName = new javax.swing.JTextField();
        jtfAppointSchedulerPatientName = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jbtnSubmitAppointment = new javax.swing.JButton();
        jbtnCancelRequestAppointmentDialog = new javax.swing.JButton();
        jftAppointSchedulerDate = new javax.swing.JFormattedTextField();

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("GIVEN NAME");

        jtfGivenName.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("LAST NAME");

        jtfLastName.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("ADDRESS");

        jtfAddress.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("AGE");

        jtfAge.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("D.O.B");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("PASSWORD");

        jbtnSubmitPatientAccountRequest.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jbtnSubmitPatientAccountRequest.setText("SUBMIT REQUEST");

        jtfDOB.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        javax.swing.GroupLayout jpSubmitPatientCreationRequestLayout = new javax.swing.GroupLayout(jpSubmitPatientCreationRequest);
        jpSubmitPatientCreationRequest.setLayout(jpSubmitPatientCreationRequestLayout);
        jpSubmitPatientCreationRequestLayout.setHorizontalGroup(
            jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSubmitPatientCreationRequestLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jpSubmitPatientCreationRequestLayout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jtfDOB))
                        .addGroup(jpSubmitPatientCreationRequestLayout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jtfAge, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpSubmitPatientCreationRequestLayout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jtfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpSubmitPatientCreationRequestLayout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jtfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpSubmitPatientCreationRequestLayout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jtfGivenName, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpSubmitPatientCreationRequestLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtnSubmitPatientAccountRequest, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                            .addComponent(jtfPassword))))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jpSubmitPatientCreationRequestLayout.setVerticalGroup(
            jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSubmitPatientCreationRequestLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfGivenName, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfAge, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(jtfDOB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSubmitPatientCreationRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jbtnSubmitPatientAccountRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jBtnViewLogin.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jBtnViewLogin.setText("LOGIN");
        jBtnViewLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnViewLoginActionPerformed(evt);
            }
        });

        jBtnViewRquestPatientAcc.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jBtnViewRquestPatientAcc.setText("REQUEST PATIENT ACCOUNT");
        jBtnViewRquestPatientAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnViewRquestPatientAccActionPerformed(evt);
            }
        });

        jBtnViewCreateAdmin.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jBtnViewCreateAdmin.setText("CREATE ADMINISTRATOR");
        jBtnViewCreateAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnViewCreateAdminActionPerformed(evt);
            }
        });

        pLoginContainer.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        pLoginContainer.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jpLRCLayout = new javax.swing.GroupLayout(jpLRC);
        jpLRC.setLayout(jpLRCLayout);
        jpLRCLayout.setHorizontalGroup(
            jpLRCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpLRCLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jpLRCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pLoginContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpLRCLayout.createSequentialGroup()
                        .addComponent(jBtnViewLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jBtnViewRquestPatientAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(jBtnViewCreateAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51))
        );
        jpLRCLayout.setVerticalGroup(
            jpLRCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLRCLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jpLRCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnViewLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnViewRquestPatientAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnViewCreateAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pLoginContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(571, Short.MAX_VALUE))
        );

        this.setContentPane(this.jpLRC);
        this.pLoginContainer.add(this.jpLoginRootView, BorderLayout.CENTER);
        this.jBtnViewLogin.setForeground(Color.BLUE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("USER ID");

        jtfUserID.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("PASSWORD");

        jpfPassword.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jBtnLogin.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jBtnLogin.setText("LOG IN");
        jBtnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpLoginRootViewLayout = new javax.swing.GroupLayout(jpLoginRootView);
        jpLoginRootView.setLayout(jpLoginRootViewLayout);
        jpLoginRootViewLayout.setHorizontalGroup(
            jpLoginRootViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLoginRootViewLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jpLoginRootViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpLoginRootViewLayout.createSequentialGroup()
                        .addGroup(jpLoginRootViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jpLoginRootViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfUserID)
                            .addComponent(jpfPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jpLoginRootViewLayout.setVerticalGroup(
            jpLoginRootViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLoginRootViewLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jpLoginRootViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpLoginRootViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(jpfPassword))
                .addGap(79, 79, 79)
                .addComponent(jBtnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("GIVEN NAME");

        jtfCreateAdminGivenName.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("LAST NAME");

        jtfCreateAdminLastName.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("ADDRESS");

        jtfCreateAdminAddress.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jbtnCreateAdminSubmit.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jbtnCreateAdminSubmit.setText("CREATE ADMINISTRATOR ACCOUNT");
        jbtnCreateAdminSubmit.setActionCommand("CREATE ADMINISTRATOR ACCOUNT");

        javax.swing.GroupLayout jpCreateAdminLayout = new javax.swing.GroupLayout(jpCreateAdmin);
        jpCreateAdmin.setLayout(jpCreateAdminLayout);
        jpCreateAdminLayout.setHorizontalGroup(
            jpCreateAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCreateAdminLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jpCreateAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCreateAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jpCreateAdminLayout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(jtfCreateAdminGivenName, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpCreateAdminLayout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(jtfCreateAdminLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpCreateAdminLayout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jtfCreateAdminAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbtnCreateAdminSubmit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jpCreateAdminLayout.setVerticalGroup(
            jpCreateAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCreateAdminLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addGroup(jpCreateAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCreateAdminGivenName, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jpCreateAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCreateAdminLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jpCreateAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCreateAdminAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addComponent(jbtnCreateAdminSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        jtblAllDoctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtblAllDoctors.setToolTipText("");
        jScrollPane1.setViewportView(jtblAllDoctors);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 938, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("All Doctors", jPanel2);

        jtblMyHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jtblMyHistory);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 938, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("My History", jPanel3);

        jtblMyAppointments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jtblMyAppointments);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 938, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("My Appointments", jPanel4);

        jlblPatientName.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jlblPatientName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton1.setForeground(new java.awt.Color(153, 0, 51));
        jButton1.setText("Request Account Termination");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Log Out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpPatientRootLayout = new javax.swing.GroupLayout(jpPatientRoot);
        jpPatientRoot.setLayout(jpPatientRootLayout);
        jpPatientRootLayout.setHorizontalGroup(
            jpPatientRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPatientRootLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18))
            .addGroup(jpPatientRootLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jlblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPatientRootLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        jpPatientRootLayout.setVerticalGroup(
            jpPatientRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPatientRootLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jlblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPatientRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jdRequestAppointment.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jdRequestAppointment.setAlwaysOnTop(true);
        jdRequestAppointment.setModal(true);

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("APPOINTMENT SCHEDULER");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("DOCTOR");

        jtfAppointmentSchedulerDoctorName.setEditable(false);

        jtfAppointSchedulerPatientName.setEditable(false);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("PATIENT");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("DATE");

        jbtnSubmitAppointment.setText("SUBMIT");
        jbtnSubmitAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSubmitAppointmentActionPerformed(evt);
            }
        });

        jbtnCancelRequestAppointmentDialog.setForeground(new java.awt.Color(204, 0, 0));
        jbtnCancelRequestAppointmentDialog.setText("CANCEL");
        jbtnCancelRequestAppointmentDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelRequestAppointmentDialogActionPerformed(evt);
            }
        });

        jftAppointSchedulerDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        javax.swing.GroupLayout jdRequestAppointmentLayout = new javax.swing.GroupLayout(jdRequestAppointment.getContentPane());
        jdRequestAppointment.getContentPane().setLayout(jdRequestAppointmentLayout);
        jdRequestAppointmentLayout.setHorizontalGroup(
            jdRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdRequestAppointmentLayout.createSequentialGroup()
                .addGroup(jdRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jdRequestAppointmentLayout.createSequentialGroup()
                        .addComponent(jbtnSubmitAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnCancelRequestAppointmentDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jdRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jdRequestAppointmentLayout.createSequentialGroup()
                            .addGap(82, 82, 82)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jdRequestAppointmentLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfAppointmentSchedulerDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jdRequestAppointmentLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfAppointSchedulerPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jdRequestAppointmentLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jftAppointSchedulerDate))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jdRequestAppointmentLayout.setVerticalGroup(
            jdRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdRequestAppointmentLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel12)
                .addGap(32, 32, 32)
                .addGroup(jdRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jtfAppointmentSchedulerDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jdRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jtfAppointSchedulerPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jdRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jftAppointSchedulerDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jdRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSubmitAppointment)
                    .addComponent(jbtnCancelRequestAppointmentDialog))
                .addGap(24, 24, 24))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 23, 1000, 850));
        setMaximumSize(new java.awt.Dimension(1000, 850));
        setMinimumSize(new java.awt.Dimension(1000, 850));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnViewLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnViewLoginActionPerformed
        this.jBtnViewLogin.setForeground(Color.BLUE);
        this.jBtnViewRquestPatientAcc.setForeground(Color.BLACK);
        this.jBtnViewCreateAdmin.setForeground(Color.BLACK);
        
        this.pLoginContainer.removeAll();
        this.pLoginContainer.add(this.jpLoginRootView, BorderLayout.CENTER);
        this.pLoginContainer.repaint();
        this.revalidate();
    }//GEN-LAST:event_jBtnViewLoginActionPerformed

    private void switchToLogin() {
        this.jBtnViewLogin.setForeground(Color.BLUE);
        this.jBtnViewRquestPatientAcc.setForeground(Color.BLACK);
        this.jBtnViewCreateAdmin.setForeground(Color.BLACK);
        
        this.pLoginContainer.removeAll();
        this.pLoginContainer.add(this.jpLoginRootView, BorderLayout.CENTER);
        this.pLoginContainer.repaint();
        this.setContentPane(this.jpLRC);
        this.revalidate();
    }
    
    private void jBtnViewRquestPatientAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnViewRquestPatientAccActionPerformed
        this.jBtnViewRquestPatientAcc.setForeground(Color.BLUE);
        this.jBtnViewLogin.setForeground(Color.BLACK);
        this.jBtnViewCreateAdmin.setForeground(Color.BLACK);
        
        this.pLoginContainer.removeAll();
        this.pLoginContainer.add(this.jpSubmitPatientCreationRequest, BorderLayout.CENTER);
        this.pLoginContainer.repaint();
        this.revalidate();
    }//GEN-LAST:event_jBtnViewRquestPatientAccActionPerformed

    private void jBtnViewCreateAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnViewCreateAdminActionPerformed
        // TODO add your handling code here:
        this.jBtnViewRquestPatientAcc.setForeground(Color.BLACK);
        this.jBtnViewLogin.setForeground(Color.BLACK);
        this.jBtnViewCreateAdmin.setForeground(Color.BLUE);
        
        this.pLoginContainer.removeAll();
        this.pLoginContainer.add(this.jpCreateAdmin, BorderLayout.CENTER);
        this.pLoginContainer.repaint();
        this.revalidate();
    }//GEN-LAST:event_jBtnViewCreateAdminActionPerformed

    private void jBtnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLoginActionPerformed
        // TODO add your handling code here:
        String userID = this.jtfUserID.getText();
        String password = new String(this.jpfPassword.getPassword());
        
        String[] userIDParts = userID.split("_");
        if (userIDParts.length != 2) {
            System.out.println("Invalid user ID detected; userID: " + userID);
            return;
        }
        
        char userType = userIDParts[0].toCharArray()[0];
        switch(userType) {
            case 'A': {
                Administrator admin = this.controller.loginAdmin(userID, password);
                if (admin != null) {
                    this.switchToAdminMode(admin);
                }
                break;
            }
            case 'D': {
                Doctor doctor = this.controller.loginDoctor(userID, password);
                if (doctor != null) {
                    this.switchToDoctorMode(doctor);
                }
                break;
            }
            case 'P': {
                Patient patient = this.controller.loginPatient(userID, password);
                if (patient != null) {
                    this.switchToPatientMode(patient);
                }
                break;
            }
            case 'S': {
                Secretary secretary = this.controller.loginSecretary(userID, password);
                if (secretary != null) {
                    this.switchToSecretaryMode(secretary);
                }
                break;
            }
            default: {
                System.out.println(String.format("Failed login; userID: %s,  password: %s", userID,  password));
            }
        }
    }//GEN-LAST:event_jBtnLoginActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.controller.persistData();
        this.switchToLogin();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jbtnCancelRequestAppointmentDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelRequestAppointmentDialogActionPerformed
        this.jdRequestAppointment.dispose();
        this.jftAppointSchedulerDate.setText("");
    }//GEN-LAST:event_jbtnCancelRequestAppointmentDialogActionPerformed

    private void jbtnSubmitAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSubmitAppointmentActionPerformed
        // TODO add your handling code here:
        System.out.println("Submit Appointment!");
        Doctor d = ((DoctorsTableModel)MainFrame.this.jtblAllDoctors.getModel()).getDoctor(MainFrame.this.jtblAllDoctors.getSelectedRow());
        try {
            AppointmentRequest ar = new AppointmentRequest(d.getUUID(), this.patient.getUUID(), Appointment.sdf.parse(this.jftAppointSchedulerDate.getText().trim()), false);
            this.controller.submitAppointmentRequest(ar);
            this.jftAppointSchedulerDate.setText("");
            this.jdRequestAppointment.dispose();
        } catch (ParseException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnSubmitAppointmentActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        System.out.println("Window closing");
        this.controller.persistData();
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.controller.requestAccountTermination(this.patient.getUUID());
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnLogin;
    private javax.swing.JButton jBtnViewCreateAdmin;
    private javax.swing.JButton jBtnViewLogin;
    private javax.swing.JButton jBtnViewRquestPatientAcc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtnCancelRequestAppointmentDialog;
    private javax.swing.JButton jbtnCreateAdminSubmit;
    private javax.swing.JButton jbtnSubmitAppointment;
    private javax.swing.JButton jbtnSubmitPatientAccountRequest;
    private javax.swing.JDialog jdRequestAppointment;
    private javax.swing.JFormattedTextField jftAppointSchedulerDate;
    private javax.swing.JLabel jlblPatientName;
    private javax.swing.JPanel jpCreateAdmin;
    private javax.swing.JPanel jpLRC;
    private javax.swing.JPanel jpLoginRootView;
    private javax.swing.JPanel jpPatientRoot;
    private javax.swing.JPanel jpSubmitPatientCreationRequest;
    private javax.swing.JPasswordField jpfPassword;
    private javax.swing.JTable jtblAllDoctors;
    private javax.swing.JTable jtblMyAppointments;
    private javax.swing.JTable jtblMyHistory;
    private javax.swing.JTextField jtfAddress;
    private javax.swing.JTextField jtfAge;
    private javax.swing.JTextField jtfAppointSchedulerPatientName;
    private javax.swing.JTextField jtfAppointmentSchedulerDoctorName;
    private javax.swing.JTextField jtfCreateAdminAddress;
    private javax.swing.JTextField jtfCreateAdminGivenName;
    private javax.swing.JTextField jtfCreateAdminLastName;
    private javax.swing.JFormattedTextField jtfDOB;
    private javax.swing.JTextField jtfGivenName;
    private javax.swing.JTextField jtfLastName;
    private javax.swing.JPasswordField jtfPassword;
    private javax.swing.JTextField jtfUserID;
    private javax.swing.JPanel pLoginContainer;
    // End of variables declaration//GEN-END:variables
    private void switchToAdminMode(Administrator admin) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void switchToDoctorMode(Doctor doctor) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void switchToPatientMode(Patient patient) {
        System.out.println("Swithching to patient mode: " + patient.toPersistableTxtFormat());
        this.patient = patient;
        this.jlblPatientName.setText("Welcome, " + patient.getGivenName() + " " + patient.getLastName());
        this.jtblAllDoctors.setModel(new DoctorsTableModel());
        this.jtblMyAppointments.setModel(new PatientAppointmentTableModel());
        this.jtblMyHistory.setModel(new PatientHistoryTableModel());
        // this.removeAll();
        this.setContentPane(this.jpPatientRoot);
        this.revalidate();
    }

    private void switchToSecretaryMode(Secretary secretary) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    
    class DoctorsTableModel extends AbstractTableModel {
        private final List<Doctor> doctors;
        DoctorsTableModel() {
            this.doctors = controller.getDoctorsList();
        }
        
        @Override
        public int getRowCount() {
            return this.doctors.size();
        }

        @Override
        public int getColumnCount() {
            return 4;
        }
        
        public Doctor getDoctor(int index) {
            return this.doctors.get(index);
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return String.class;
        }

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0: return "ID";
                case 1: return "Given Name";
                case 2: return "Last Name";
                case 3: return "Rating";
            }
            return null;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Doctor doctor = this.doctors.get(rowIndex);
            double ratingD = controller.getDoctorRating(doctor.getUUID());
            String ratingS = ratingD == 0 ? "--" : String.valueOf(ratingD) + " stars";
            switch (columnIndex) {
                case 0: return doctor.getUUID();
                case 1: return doctor.getGivenName();
                case 2: return doctor.getLastName();
                case 3: return ratingS;
            }
            return null;
        }
    }
    
    class PatientHistoryTableModel extends AbstractTableModel {
        private final List<PatientHistory> histories;
        PatientHistoryTableModel() {
            System.out.println("controller == null? " + (null == controller));
            this.histories = controller.getPatientHistoryList(patient.getUUID());
        }
        
        @Override
        public int getRowCount() {
            return this.histories.size();
        }

        @Override
        public int getColumnCount() {
            return 2;
        }
        
        public PatientHistory getDoctor(int index) {
            return this.histories.get(index);
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return String.class;
        }

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0: return "ID";
                case 1: return "Prescription";
            }
            return null;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            PatientHistory history = this.histories.get(rowIndex);
            Prescription p = controller.getPrescription(history.getPrescriptionUUID());
            switch (columnIndex) {
                case 0: return history.getUUID();
                case 1: return p.getDescription();
            }
            return null;
        }
    }
    
    class PatientAppointmentTableModel extends AbstractTableModel {
        private final List<Appointment> appointments;
        PatientAppointmentTableModel() {
            this.appointments = controller.getPatientAppointmentList(patient.getUUID());
        }
        
        @Override
        public int getRowCount() {
            return this.appointments.size();
        }

        @Override
        public int getColumnCount() {
            return 3;
        }
        
        public Appointment getDoctor(int index) {
            return this.appointments.get(index);
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return String.class;
        }

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0: return "ID";
                case 1: return "Date";
                case 2: return "Doctor";
            }
            return null;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Appointment a = this.appointments.get(rowIndex);
            Doctor d = controller.getDoctor(a.getDoctorUUID());
            switch (columnIndex) {
                case 0: return a.getUUID();
                case 1: return Appointment.sdf.format(a.getDate());
                case 2: return d.getGivenName() + " " + d.getLastName();
            }
            return null;
        }
    }
}
